<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SKY技术修炼指南</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sky-ng.github.io/"/>
  <updated>2020-10-06T09:00:26.192Z</updated>
  <id>https://sky-ng.github.io/</id>
  
  <author>
    <name>sky-ng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美团面试官：说说MySQL的索引</title>
    <link href="https://sky-ng.github.io/2020/10/04/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E5%AE%98%EF%BC%9A%E8%AF%B4%E8%AF%B4MySQL%E7%9A%84%E7%B4%A2%E5%BC%95/"/>
    <id>https://sky-ng.github.io/2020/10/04/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95%E5%AE%98%EF%BC%9A%E8%AF%B4%E8%AF%B4MySQL%E7%9A%84%E7%B4%A2%E5%BC%95/</id>
    <published>2020-10-04T03:15:33.000Z</published>
    <updated>2020-10-06T09:00:26.192Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;从本文开始，选取牛客网上大厂的面试题，整理出相关内容的知识点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://sky-ng.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://sky-ng.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java内存模型</title>
    <link href="https://sky-ng.github.io/2020/09/13/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
    <id>https://sky-ng.github.io/2020/09/13/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</id>
    <published>2020-09-13T12:31:58.000Z</published>
    <updated>2020-09-16T08:21:50.416Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍一下Java多线程中比较重要的部分——Java内存模型，也就是我们说的JMM。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="Java多线程" scheme="https://sky-ng.github.io/tags/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java线程通信</title>
    <link href="https://sky-ng.github.io/2020/09/08/Java%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/"/>
    <id>https://sky-ng.github.io/2020/09/08/Java%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1/</id>
    <published>2020-09-08T13:05:39.000Z</published>
    <updated>2020-09-12T14:51:14.045Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;线程通信是Java线程部分的重点，我们介绍一下常见的几种线程通信方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="Java多线程" scheme="https://sky-ng.github.io/tags/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>电路交换、报文交换与分组交换</title>
    <link href="https://sky-ng.github.io/2020/08/27/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E3%80%81%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%E4%B8%8E%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/"/>
    <id>https://sky-ng.github.io/2020/08/27/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E3%80%81%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%E4%B8%8E%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2/</id>
    <published>2020-08-27T07:08:15.000Z</published>
    <updated>2020-08-29T07:21:10.238Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在计算机网络中有三种主要的数据交换方式，分别是电路交换、报文交换和分组交换。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://sky-ng.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://sky-ng.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>不会吧不会吧，不会有人连线程池都没听说过吧</title>
    <link href="https://sky-ng.github.io/2020/08/06/%E4%B8%8D%E4%BC%9A%E5%90%A7%E4%B8%8D%E4%BC%9A%E5%90%A7%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E4%BA%BA%E8%BF%9E%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%83%BD%E6%B2%A1%E5%90%AC%E8%AF%B4%E8%BF%87%E5%90%A7/"/>
    <id>https://sky-ng.github.io/2020/08/06/%E4%B8%8D%E4%BC%9A%E5%90%A7%E4%B8%8D%E4%BC%9A%E5%90%A7%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%9C%89%E4%BA%BA%E8%BF%9E%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%83%BD%E6%B2%A1%E5%90%AC%E8%AF%B4%E8%BF%87%E5%90%A7/</id>
    <published>2020-08-06T13:34:41.000Z</published>
    <updated>2020-08-09T02:31:33.462Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在上一篇文章中，我们介绍了创建线程的三种方法，但实际开发中如果需要频繁创建线程则不会使用前文说的那三种方法，而是选择使用线程池创建线程。使用线程池可以有效减少在手动创建线程过程中产生的开销，方便线程进行统一管理，提高系统资源利用率。&lt;/p&gt;
&lt;p&gt;在阿里巴巴Java开发手册中也强制规定了要使用线程资源必须通过线程池创建，不允许在应用中自行显式创建线程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="Java多线程" scheme="https://sky-ng.github.io/tags/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>从Java创建线程入门多线程</title>
    <link href="https://sky-ng.github.io/2020/08/03/%E4%BB%8EJava%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://sky-ng.github.io/2020/08/03/%E4%BB%8EJava%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2020-08-03T14:09:57.000Z</published>
    <updated>2020-08-04T12:58:38.808Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文是Java多线程系列的第一篇文章，关于线程的基础知识这里不多介绍，在我之前的文章中就已经介绍过了，不熟悉什么是线程的同学可以先去看一下。&lt;a href=&quot;https://sky-ng.github.io/2020/06/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/&quot;&gt;操作系统-进程与线程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="Java多线程" scheme="https://sky-ng.github.io/tags/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>一道广联达秋招算法题</title>
    <link href="https://sky-ng.github.io/2020/07/22/%E4%B8%80%E9%81%93%E5%B9%BF%E8%81%94%E8%BE%BE%E7%A7%8B%E6%8B%9B%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    <id>https://sky-ng.github.io/2020/07/22/%E4%B8%80%E9%81%93%E5%B9%BF%E8%81%94%E8%BE%BE%E7%A7%8B%E6%8B%9B%E7%AE%97%E6%B3%95%E9%A2%98/</id>
    <published>2020-07-22T10:31:40.000Z</published>
    <updated>2020-08-03T14:14:50.533Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天下午师兄在教研室群里发了一道热乎的广联达算法题，乍一看完全没有思路，于是实验室的小伙伴们饶有兴致地开始讨论起了这道题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔试面试" scheme="https://sky-ng.github.io/categories/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="算法" scheme="https://sky-ng.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="笔试" scheme="https://sky-ng.github.io/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>类加载器与双亲委派模型</title>
    <link href="https://sky-ng.github.io/2020/07/21/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E4%B8%8E%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B/"/>
    <id>https://sky-ng.github.io/2020/07/21/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E4%B8%8E%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B/</id>
    <published>2020-07-21T08:04:10.000Z</published>
    <updated>2020-07-21T14:10:02.270Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前说到类加载机制的相关原理，这次来谈谈类加载器以及双亲委派模型的概念。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="JVM" scheme="https://sky-ng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>类加载机制</title>
    <link href="https://sky-ng.github.io/2020/07/16/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <id>https://sky-ng.github.io/2020/07/16/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</id>
    <published>2020-07-16T03:19:07.000Z</published>
    <updated>2020-07-20T11:13:19.265Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前我们了解过class文件的存储格式，本文将介绍虚拟机如何加载class文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="JVM" scheme="https://sky-ng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>简单理解线段树</title>
    <link href="https://sky-ng.github.io/2020/07/12/%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    <id>https://sky-ng.github.io/2020/07/12/%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3%E7%BA%BF%E6%AE%B5%E6%A0%91/</id>
    <published>2020-07-12T07:41:59.000Z</published>
    <updated>2020-07-14T10:42:10.972Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;线段树是二叉树的一种，常常被用于求区间和与区间最大值等操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>关于HashMap，你想知道的可能都有</title>
    <link href="https://sky-ng.github.io/2020/07/08/%E5%85%B3%E4%BA%8EHashMap%EF%BC%8C%E4%BD%A0%E6%83%B3%E7%9F%A5%E9%81%93%E7%9A%84%E5%8F%AF%E8%83%BD%E9%83%BD%E6%9C%89/"/>
    <id>https://sky-ng.github.io/2020/07/08/%E5%85%B3%E4%BA%8EHashMap%EF%BC%8C%E4%BD%A0%E6%83%B3%E7%9F%A5%E9%81%93%E7%9A%84%E5%8F%AF%E8%83%BD%E9%83%BD%E6%9C%89/</id>
    <published>2020-07-08T07:02:21.000Z</published>
    <updated>2020-07-10T15:05:47.384Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在现在的互联网大厂面试中，HashMap几乎是必问的知识点。因此本文对HashMap进行系统性的总结，将HashMap常见的知识点都整理出来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="Java容器" scheme="https://sky-ng.github.io/tags/Java%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-网络层（更新中）</title>
    <link href="https://sky-ng.github.io/2020/07/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
    <id>https://sky-ng.github.io/2020/07/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82/</id>
    <published>2020-07-07T13:52:53.000Z</published>
    <updated>2020-07-12T07:23:18.184Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;网络层位于TCP/IP结构中的第三层，也是计算机网络中的重点和难点之一。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://sky-ng.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://sky-ng.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>本科数据结构课程的漏网之鱼-红黑树（下）</title>
    <link href="https://sky-ng.github.io/2020/06/26/%E6%9C%AC%E7%A7%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC-%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>https://sky-ng.github.io/2020/06/26/%E6%9C%AC%E7%A7%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC-%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%8B%EF%BC%89/</id>
    <published>2020-06-26T07:21:26.000Z</published>
    <updated>2020-06-30T11:24:33.705Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;红黑树删除节点的操作与插入操作相比难度大大提高，以至很多博客讲的很不细致，但是为了内容的完整性，还是决定尝试写一下这篇红黑树删除节点的文章。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>本科数据结构课程的漏网之鱼-红黑树（上）</title>
    <link href="https://sky-ng.github.io/2020/06/22/%E6%9C%AC%E7%A7%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC-%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://sky-ng.github.io/2020/06/22/%E6%9C%AC%E7%A7%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%BC%8F%E7%BD%91%E4%B9%8B%E9%B1%BC-%E7%BA%A2%E9%BB%91%E6%A0%91%EF%BC%88%E4%B8%8A%EF%BC%89/</id>
    <published>2020-06-22T14:01:43.000Z</published>
    <updated>2020-06-26T09:08:22.832Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在我大学的时候，就曾经从参加面试的学长那里知道红黑树这种数据结构，但是经过我的观察，绝大部分的本科数据结构课程里都没有这部分内容。本文将介绍这种被本科教学体系遗弃，但却常常被工作面试中提到的数据结构，并且为后面的HashMap的内容做铺垫。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>class类文件结构（这是一篇非常枯燥的文章）</title>
    <link href="https://sky-ng.github.io/2020/06/20/class%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%EF%BC%88%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87%E9%9D%9E%E5%B8%B8%E6%9E%AF%E7%87%A5%E7%9A%84%E6%96%87%E7%AB%A0%EF%BC%89/"/>
    <id>https://sky-ng.github.io/2020/06/20/class%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%EF%BC%88%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87%E9%9D%9E%E5%B8%B8%E6%9E%AF%E7%87%A5%E7%9A%84%E6%96%87%E7%AB%A0%EF%BC%89/</id>
    <published>2020-06-20T08:10:19.000Z</published>
    <updated>2020-06-21T14:36:54.584Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们知道，Java文件编译后会产生一个字节码文件（&lt;code&gt;.class&lt;/code&gt;文件），本文介绍字节码文件的文件结构相关内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="JVM" scheme="https://sky-ng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>操作系统-处理机调度</title>
    <link href="https://sky-ng.github.io/2020/06/17/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6/"/>
    <id>https://sky-ng.github.io/2020/06/17/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6/</id>
    <published>2020-06-17T13:58:03.000Z</published>
    <updated>2020-06-18T08:01:21.195Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍处理机调度相关的内容，主要涉及三级调度与调度算法等知识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="https://sky-ng.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="https://sky-ng.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>后浪-下一代垃圾收集器</title>
    <link href="https://sky-ng.github.io/2020/06/14/%E5%90%8E%E6%B5%AA-%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/"/>
    <id>https://sky-ng.github.io/2020/06/14/%E5%90%8E%E6%B5%AA-%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8/</id>
    <published>2020-06-14T09:08:56.000Z</published>
    <updated>2020-06-16T11:38:33.090Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;随着Java虚拟机技术的不断发展，垃圾收集器也进行了大量迭代。前面介绍了7种经典的垃圾收集器，各有优缺点。Serial GC虽然是最古老的垃圾收集器，但由于设计简单，未必就是过时的收集器。CMS收集器由于自身有些算法缺陷，在JDK9中被标记为废弃，在最新版的JDK14中，CMS已经被彻底移除，进入了历史垃圾堆。我们可以发现G1收集器在JDK的各个版本中仍然在不断改进，并且成为了JDK9到JDK13的默认垃圾收集器。今天，我们要介绍的三种垃圾收集器算是垃圾收集器的前沿成果。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="JVM" scheme="https://sky-ng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>分治算法与归并排序</title>
    <link href="https://sky-ng.github.io/2020/06/13/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95%E4%B8%8E%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    <id>https://sky-ng.github.io/2020/06/13/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95%E4%B8%8E%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</id>
    <published>2020-06-13T07:21:50.000Z</published>
    <updated>2020-06-13T13:13:11.845Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;距离上次写快排算法的文章已经过去一个半月了，和本文要提到的归并排序算法类似，快排也是分治思想的一种典型应用，如果有不熟悉快速排序的同学可以翻阅我之前写过的快速排序算法的文章。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://sky-ng.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="https://sky-ng.github.io/tags/Java/"/>
    
      <category term="算法" scheme="https://sky-ng.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://sky-ng.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统-进程与线程</title>
    <link href="https://sky-ng.github.io/2020/06/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    <id>https://sky-ng.github.io/2020/06/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</id>
    <published>2020-06-10T08:19:36.000Z</published>
    <updated>2020-06-11T11:02:12.671Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文是进程管理中的第一部分，进程管理的内容是操作系统的核心，也是考试和面试的重点内容，本文将对进程与线程相关的内容进行梳理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="https://sky-ng.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="https://sky-ng.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>你一定要了解的数据结构-并查集</title>
    <link href="https://sky-ng.github.io/2020/06/09/%E4%BD%A0%E4%B8%80%E5%AE%9A%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    <id>https://sky-ng.github.io/2020/06/09/%E4%BD%A0%E4%B8%80%E5%AE%9A%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%B9%B6%E6%9F%A5%E9%9B%86/</id>
    <published>2020-06-09T02:02:49.000Z</published>
    <updated>2020-06-09T08:57:39.287Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天要介绍一种非常重要的数据结构-并查集，这种数据结构常常被用于检测有环图的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://sky-ng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="https://sky-ng.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://sky-ng.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
